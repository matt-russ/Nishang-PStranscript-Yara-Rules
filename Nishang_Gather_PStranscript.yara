rule Nishang_Gather_PStranscript
{
    meta:
        author = "Matthew Russett"
        description = "This rule is looking for the outputs or inputs to the powershell scripts in the Gather section of the Nishang Framework.  It is designed to be ran against PowerShell Transcript Logs"
    strings:
		$Check_VM_1 = "Check-VM" nocase
		$Check_VM_2 = "This is a Hyper-V machine."
		$Check_VM_3 = "This is a VMWare machine."
		$Check_VM_4 = "This is a Virtual PC."
		$Check_VM_5 = "This is a Virtual Box."
		$Check_VM_6 = "This is a Xen Machine."
		$Check_VM_7 = "This is a Qemu machine."
		$Copy_VSS = "Copy-VSS" nocase
		$FireBuster_1 = "FireBuster" nocase
		$FireBuster_2 = "Data sent to all ports"
		$FireListener_1 = "FireListener" nocase
		$FireListener_2 = " connected through port "
		$FireListener_3 = "Stopping all jobs.....This can take many minutes."
		$Get_Information_1 = "Get-Information" nocase
		$Get_Information_2 = "Logged in users:"
		$Get_Information_3 = "Powershell environment:"
		$Get_Information_4 = "Putty trusted hosts:"
		$Get_Information_5 = "Putty saved sessions:"
		$Get_Information_6 = "Recently used commands:"
		$Get_Information_7 = "Shares on the machine:"
		$Get_Information_8 = "Environment variables:"
		$Get_Information_9 = "More details for current user:"
		$Get_Information_10 = "SNMP community strings:"
		$Get_Information_11 = "SNMP community strings for current user:"
		$Get_Information_12 = "Installed Applications:"
		$Get_Information_13 = "Installed Applications for current user:"
		$Get_Information_14 = "Domain Name:"
		$Get_Information_15 = "Contents of /etc/hosts:"
		$Get_Information_16 = "Running Services:"
		$Get_Information_17 = "Account Policy:"
		$Get_Information_18 = "Local users:"
		$Get_Information_19 = "Local Groups:"
		$Get_Information_20 = "WLAN Info:"
		$Enable_DuplicateToken = "Enable-DuplicateToken" nocase
		$Get_LsaSecret_1 = "Get-LsaSecret" nocase
		$Get_LsaSecret_2 = "Access to registry Denied, run as NT AUTHORITY\\SYSTEM"
		$Get_LsaSecret_3 = "lsaOpenPolicyHandle Windows Error Code: "
		$Get_LsaSecret_4 = "lsaNtsStatusToWinError: "
		$Get_PassHashes_1 = "Get-PassHashes" nocase
		$Get_PassHashes_2 = "PowerDump" nocase
		$Get_PassHashes_3 = "Invalid Key. Use one of the following options HKCR, HKCU, HKLM, HKU, HKCC"
		$Get_PassHashes_4 = "RegQueryInfoKey failed"
		$Get_PassHashes_5 = "::Reg"
		$Get_PassHashes_6 = "Get-BootKey" nocase
		$Get_PassHashes_7 = "Get-HBootKey" nocase
		$Get_PassHashes_8 = "Get-UserHashes" nocase
		$Get_PassHashes_9 = "DecryptHashes" nocase
		$Get_PassHashes_10 = "DecryptSingleHash" nocase
		$Get_PassHashes_11 = "DumpHashes" nocase
		$Get_PassHashes_12 = "Get-UserKeys" nocase
		$Get_PassHints = "Get-PassHints" nocase
		$Get_WLAN_Keys_1 = "Get-WLAN-Keys" nocase
		$Get_WLAN_Keys_2 = "netsh wlan show profiles name"
		$Get_WebCredentials = "Get-WebCredentials" nocase
		$Invoke_CredentialsPhish = "Invoke-CredentialsPhish" nocase
		$Invoke_Mimikatz = "Invoke-Mimikatz" nocase
		$Invoke_MimikatzWDigestDowngrade_1 = "Invoke-MimikatzWDigestDowngrade" nocase
		$Invoke_MimikatzWDigestDowngrade_2 = "Manipulating Windows Registry to force WDigest use."
		$Invoke_MimikatzWDigestDowngrade_3 = "Invoke-ReflectivePEInjection" nocase
		$Invoke_MimikatzWDigestDowngrade_4 = "Mimikatz" nocase
		$Invoke_MimikatzWDigestDowngrade_5 = "-DumpCerts" nocase
		$Invoke_MimikatzWDigestDowngrade_6 = "-DumpCreds" nocase
		$Invoke_MimikatzWDigestDowngrade_7 = "Write-BytesToMemory" nocase
		$Invoke_MimikatzWDigestDowngrade_8 = "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: "
		$Invoke_MimikatzWDigestDowngrade_9 = "Windows XP/8 detected, using CreateRemoteThread. Address of thread: "
		$Invoke_MimikatzWDigestDowngrade_10 = "Error creating remote thread, thread handle is null"
		$Invoke_MimikatzWDigestDowngrade_11 = "Done importing DLL imports"
		$Invoke_MimikatzWDigestDowngrade_12 = "Allocating memory for the PE and write its headers to memory"
		$Invoke_MimikatzWDigestDowngrade_13 = "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again"
		$Invoke_MimikatzWDigestDowngrade_14 = "Copy PE sections in to memory"
		$Invoke_MimikatzWDigestDowngrade_15 = "Update memory addresses based on where the PE was actually loaded in memory"
		$Invoke_MimikatzWDigestDowngrade_16 = "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
		$Invoke_MimikatzWDigestDowngrade_17 = "Update memory protection flags"
		$Invoke_MimikatzWDigestDowngrade_18 = "PE being loaded in to a remote process, not adjusting memory permissions"
		$Invoke_MimikatzWDigestDowngrade_19 = "EXE thread has completed."
		$Invoke_MimikatzWDigestDowngrade_20 = "Getting SeDebugPrivilege"
		$Invoke_MimikatzWDigestDowngrade_21 = "Got the handle for the remote process to inject in to"
		$Invoke_MimikatzWDigestDowngrade_22 = "Calling Invoke-MemoryLoadLibrary"
		$Invoke_MimikatzWDigestDowngrade_23 = "Someone logged back in! Dumping credentials."
		$Invoke_MimikatzWDigestDowngrade_24 = "Locking the target machine."
		$Invoke_mimikittenz_1 = "Invoke-mimikittenz" nocase
		$Invoke_mimikittenz_2 = "mimikittenz-1.0-alpha"
		$Invoke_mimikittenz_3 = "CAN I HAZ WAM?"
		$Invoke_mimikittenz_4 = "jamieson@dringensec.com"
		$Invoke_SSIDExfil_1 = "Invoke-SSIDExfil" nocase
		$Invoke_SSIDExfil_2 = "Decoding the exfiltrated value."
		$Invoke_SSIDExfil_3 = "Exfiltrating the data."
		$Invoke_SSIDExfil_4 = "The data is too long for SSID name. It can only be 32 bytes long. Aborting.."
		$Invoke_SSIDExfil_5 = "Setting the hosted network SSID to "
		$Invoke_SSIDExfil_6 = "Startig the hosted network SSID "
		$Invoke_SessionGopher_1 = "Invoke-SessionGopher" nocase
		$Invoke_SessionGopher_2 = "SessionGopher" nocase
		$Invoke_SessionGopher_3 = "Getting member computers in the domain."
		$Invoke_SessionGopher_4 = "Reading the list of targets."
		$Invoke_SessionGopher_5 = "Found saved WinSCP sessions."
		$Invoke_SessionGopher_6 = "Found saved PuTTY sessions."
		$Invoke_SessionGopher_7 = "Found saved RDP sessions."
		$Invoke_SessionGopher_8 = "Found SupePuTTY sessions.xml"
		$Invoke_SessionGopher_9 = "Found FileZilaa sitemanager.xml"
		$Invoke_SessionGopher_10 = "Running the Thorough tests. Reading files on the target machine. This may take few minutes."
		$Invoke_SessionGopher_11 = "DownloadAndExtractFromRemoteRegistry" nocase
		$Invoke_SessionGopher_12 = "Microsoft Remote Desktop (RDP) Sessions"
		$Invoke_SessionGopher_13 = "PuTTY Private Key Files (.ppk)"
		$Invoke_SessionGopher_14 = "Skipping enumeration against the Domain Controller(s) for stealth."
		$Keylogger = "Keylogger" nocase
		$Show_TargetScreen_1 = "Show-TargetScreen" nocase
		$Show_TargetScreen_2 = "Send failed to "
		$Show_TargetScreen_3 = "Something went wrong! Check if the server is reachable and you are using the correct port."
    condition:
        any of them
}